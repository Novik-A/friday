{"version":3,"sources":["d1-main/ui/common/c4-Error404/Error404.module.css","d1-main/ui/common/c1-SuperInputText/SuperInputText.module.css","d1-main/ui/common/c2-SuperButton/SuperButton.module.css","d1-main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","d1-main/ui/common/c4-Error404/Error404.tsx","d2-features/f1-auth/a1-login/Login.tsx","d2-features/f1-auth/a2-register/Register.tsx","d1-main/ui/common/c1-SuperInputText/SuperInputText.tsx","d1-main/ui/common/c2-SuperButton/SuperButton.tsx","d1-main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","d2-features/f0-test/TestPage.tsx","d1-main/ui/Main/Main.tsx","d2-features/f1-auth/a2-register/RestorePassword.tsx","d2-features/f1-auth/a2-register/UpdatePassword.tsx","d1-main/ui/Routes/Routes.tsx","d1-main/ui/Header/Header.tsx","d1-main/bll/authReducer.ts","d1-main/dal/api.ts","d1-main/bll/appReducer.ts","d1-main/bll/store.ts","d1-main/ui/App.tsx","reportWebVitals.ts","index.tsx","d1-main/ui/Header/Header.module.css"],"names":["module","exports","Error404","className","s","body","c","_404","hr","_1","_2","btn","href","Login","Register","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","SuperCheckbox","onChangeChecked","children","checkbox","checked","TestPage","useState","text","setText","showAlert","alert","setChecked","onClick","Main","RestorePassword","UpdatePassword","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","block","initialState","axios","create","baseURL","rootReducer","combineReducers","app","state","action","auth","store","createStore","applyMiddleware","thunk","window","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09f37d86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Error404_body__1ZmcP\",\"c\":\"Error404_c__Y5t9r\",\"_404\":\"Error404__404__1xB8i\",\"_1\":\"Error404__1__2xlpo\",\"_2\":\"Error404__2__Vq8j7\",\"btn\":\"Error404_btn__3QVIX\",\"hr\":\"Error404_hr__iZU22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__25OR4\",\"superInput\":\"SuperInputText_superInput__3RWk6\",\"errorInput\":\"SuperInputText_errorInput__4-GBi\",\"error\":\"SuperInputText_error__4JXAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__1l1KE\",\"red\":\"SuperButton_red__3YjQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1jNOX\"};","import React from \"react\";\r\nimport s from \"./Error404.module.css\";\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.c}>\r\n                <div className={s._404}>404</div>\r\n                <hr className={s.hr}/>\r\n                <div className={s._1}>THE PAGE</div>\r\n                <div className={s._2}>WAS NOT FOUND</div>\r\n                <a className={s.btn} href='#'>BACK TO HOME</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            <div>Login</div>\r\n\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const Register = () => {\r\n    return (\r\n        <div>\r\n            <div>Register</div>\r\n\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className ? className : \"\"}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.btn} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.checkbox}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span>{children}</span>\r\n        </label>  // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../../d1-main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../d1-main/ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../d1-main/ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestPage = () => {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text);\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n    return (\r\n        <div>\r\n            <div>TestPage</div>\r\n            <div>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                />\r\n                <SuperButton onClick={showAlert}>delete</SuperButton>\r\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked}>some text</SuperCheckbox>\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <div>Main</div>\r\n\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const RestorePassword = () => {\r\n    return (\r\n        <div>\r\n            <div>Restore password</div>\r\n\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const UpdatePassword = () => {\r\n    return (\r\n        <div>\r\n            <div>Update password</div>\r\n\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch } from \"react-router-dom\";\r\nimport {Error404} from \"../common/c4-Error404/Error404\";\r\nimport {Login} from \"../../../d2-features/f1-auth/a1-login/Login\";\r\nimport { Register } from \"../../../d2-features/f1-auth/a2-register/Register\";\r\nimport {TestPage} from \"../../../d2-features/f0-test/TestPage\";\r\nimport {Main} from \"../Main/Main\";\r\nimport {RestorePassword} from \"../../../d2-features/f1-auth/a2-register/RestorePassword\";\r\nimport {UpdatePassword} from \"../../../d2-features/f1-auth/a2-register/UpdatePassword\";\r\n\r\nexport const PATH = {\r\n    MAIN: \"/main\",\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    TEST: \"/test\",\r\n    RESTORE_PASSWORD: \"/restore\",\r\n    UPDATE_PASSWORD: \"/update\",\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.MAIN}/>}/>\r\n                <Route path={PATH.MAIN} render={() => <Main/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} render={() => <RestorePassword/>}/>\r\n                <Route path={PATH.UPDATE_PASSWORD} render={() => <UpdatePassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestPage/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport s from \"./Header.module.css\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.MAIN} className={s.link} activeClassName={s.active}>Main</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={s.link} activeClassName={s.active}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTER} className={s.link} activeClassName={s.active}>Register</NavLink>\r\n            <NavLink to={PATH.TEST} className={s.link} activeClassName={s.active}>TestPage</NavLink>\r\n            <div className={s.block}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {Dispatch} from 'redux'\r\nimport {authAPI} from \"../dal/api\";\r\n\r\nconst initialState = {\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET-IS-LOGGED-IN':\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedIn = () =>\r\n    ({type: 'AUTH/SET-IS-LOGGED-IN'} as const)\r\n\r\n// thunks\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    authAPI.logout()\r\n        .then(res => {\r\n\r\n        })\r\n        .catch((error) => {\r\n\r\n        })\r\n}\r\n\r\n// types\r\ntype InitialStateType = typeof initialState\r\ntype ActionsType = ReturnType<typeof setIsLoggedIn>","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://neko-cafe-back.herokuapp.com/`\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth`)\r\n    },\r\n    login() {\r\n        return instance.post(`auth`)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth`)\r\n    }\r\n}\r\n\r\n// types\r\n","import { AxiosError } from 'axios';\r\nimport {Dispatch} from 'redux'\r\nimport {authAPI} from \"../dal/api\";\r\n\r\nconst initialState = {\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-IS-INITIALIZED':\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsInitialized = () =>\r\n    ({type: 'APP/SET-IS-INITIALIZED'} as const)\r\n\r\n// thunks\r\n\r\nexport const initializeAppTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    authAPI.me().then(res => {\r\n\r\n    })\r\n        .catch((err: AxiosError) => {\r\n\r\n        })\r\n        .finally(() => {\r\n\r\n    })\r\n}\r\n\r\n// types\r\ntype InitialStateType = typeof initialState\r\ntype ActionsType = ReturnType<typeof setIsInitialized>","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {authReducer} from \"./authReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {Header} from \"./Header/Header\";\nimport {Routes} from \"./Routes/Routes\";\nimport {store} from '../bll/store';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Provider store={store}>\n          <Header/>\n          <Routes/>\n        </Provider>\n      </HashRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './d1-main/ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__SknYj\",\"link\":\"Header_link__1cb0f\",\"active\":\"Header_active__b-SPl\",\"block\":\"Header_block__kYiV1\"};"],"sourceRoot":""}