{"version":3,"sources":["d1-main/ui/common/c1-SuperInputText/SuperInputText.module.css","d1-main/ui/common/c4-Error404/Error404.module.css","d1-main/ui/common/c2-SuperButton/SuperButton.module.css","d2-features/f1-auth/a3-forgot/f-1-ui/Forgot.module.css","d1-main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","d1-main/ui/common/c4-Error404/Error404.tsx","d1-main/dal/base-url.ts","d1-main/dal/api-login.ts","d1-main/dal/api-register.ts","d1-main/bll/authReducer.ts","d1-main/dal/api.ts","d1-main/bll/appReducer.ts","d2-features/f1-auth/a3-forgot/f-3-dal/ForgotAPI.ts","d2-features/f1-auth/a3-forgot/f-2-bll/b-2-redux/forgotReducer.ts","d1-main/bll/loginReducer.ts","d1-main/ui/common/c1-SuperInputText/SuperInputText.tsx","d1-main/ui/common/c1-SuperInputText/SuperInputPassword.tsx","d1-main/ui/common/c2-SuperButton/SuperButton.tsx","d1-main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","d2-features/f1-auth/a1-login/Login.tsx","d2-features/f1-auth/a2-register/Register.tsx","d2-features/f0-test/TestPage.tsx","d1-main/ui/Main/Main.tsx","d2-features/f1-auth/a3-forgot/f-1-ui/Forgot.tsx","d2-features/f1-auth/a3-forgot/f-1-ui/CheckEmail.tsx","d2-features/f1-auth/a3-forgot/f-1-ui/ForgotContainer.tsx","d2-features/f1-auth/a3-forgot/f-1-ui/ForgotPage.tsx","d2-features/f1-auth/a3-forgot/f-1-ui/SetPass.tsx","d1-main/ui/Profile/Profile.tsx","d1-main/ui/Routes/Routes.tsx","d1-main/ui/Header/Header.tsx","d1-main/ui/App.tsx","reportWebVitals.ts","d1-main/bll/store.ts","index.tsx","d1-main/ui/Header/Header.module.css"],"names":["module","exports","Error404","className","s","body","c","_404","hr","_1","_2","btn","href","instance","axios","create","baseURL","loginAPI","data","post","registerAPI","initialState","isLoggedIn","status","error","isInitialized","setAppStatusAC","type","ForgotAPI","FORGOT_ERROR","FORGOT_SUCCESS","SET_PASS_SUCCESS","forgotInitialState","linkSent","setNewPass","email","forgotError","forgotTC","dispatch","forgotData","from","message","then","res","forgotSuccess","catch","e","response","console","log","setPassTC","defaultDate","Date","userData","_id","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","isRegistered","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","currentTarget","value","key","SuperInputPassword","SuperButton","red","finalClassName","SuperCheckbox","onChangeChecked","children","checkbox","checked","Login","useDispatch","useSelector","state","loginRegister","forgot","useEffect","formik","useFormik","initialValues","password","validate","values","errors","test","onSubmit","loginData","loginResponse","isLogged","resetForm","to","header","page","handleSubmit","htmlFor","id","getFieldProps","touched","style","color","PATH","FORGOT","textLink","text","REGISTER","link","Register","isReg","registerData","alert","JSON","stringify","action","TestPage","useState","setText","showAlert","setChecked","onClick","Main","Forgot","setEmail","placeholder","LOGIN","CheckEmail","ForgotContainer","ForgotPage","withRouter","token","useParams","setPassword","length","resetPasswordToken","Profile","MAIN","TEST","SET_PASS","PROFILE","Routes","path","exact","render","Header","props","activeClassName","active","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","auth","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecaa9db8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__25OR4\",\"superInput\":\"SuperInputText_superInput__3RWk6\",\"errorInput\":\"SuperInputText_errorInput__4-GBi\",\"error\":\"SuperInputText_error__4JXAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Error404_body__1ZmcP\",\"c\":\"Error404_c__Y5t9r\",\"_404\":\"Error404__404__1xB8i\",\"_1\":\"Error404__1__2xlpo\",\"_2\":\"Error404__2__Vq8j7\",\"btn\":\"Error404_btn__3QVIX\",\"hr\":\"Error404_hr__iZU22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__1l1KE\",\"red\":\"SuperButton_red__3YjQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Forgot_body__1yGX2\",\"header\":\"Forgot_header__1VTNh\",\"page\":\"Forgot_page__36hEU\",\"text\":\"Forgot_text__2mze1\",\"textLink\":\"Forgot_textLink__2BWBZ\",\"link\":\"Forgot_link__2FjTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1jNOX\"};","import React from \"react\";\r\nimport s from \"./Error404.module.css\";\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.c}>\r\n                <div className={s._404}>404</div>\r\n                <hr className={s.hr}/>\r\n                <div className={s._1}>THE PAGE</div>\r\n                <div className={s._2}>WAS NOT FOUND</div>\r\n                <a className={s.btn} href='#'>BACK TO HOME</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0/';\r\n// export const baseURL = 'https://cards-friday-back.herokuapp.com/2.0/';\r\n// export const baseURL = 'http://localhost:7542/2.0/';\r\n\r\nexport const instance = axios.create({\r\n    baseURL\r\n});\r\n","import {instance} from \"./base-url\";\r\n\r\n\r\n// api\r\nexport const loginAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<ResponseLoginType>(`auth/login`, data)\r\n    },\r\n}\r\n\r\n\r\n// types\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\nexport type ResponseLoginType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\n","import {instance} from \"./base-url\";\r\n\r\n// api\r\nexport const registerAPI = {\r\n    register(data: RegisterParamsType) {\r\n        return instance.post<ResponseRegisterType>(`auth/register`, data)\r\n    },\r\n}\r\n\r\n// types\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type ResponseRegisterType = {\r\n    addUser: any\r\n    error?: string\r\n}\r\n\r\n","import {Dispatch} from 'redux'\r\nimport {authAPI} from \"../dal/api\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.isLogged}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (isLogged: boolean) => ({type: 'AUTH/SET-IS-LOGGED-IN', isLogged} as const)\r\n\r\n// thunks\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    authAPI.logout()\r\n        .then(res => {\r\n\r\n        })\r\n        .catch((error) => {\r\n\r\n        })\r\n}\r\n\r\n// types\r\ntype InitialStateType = typeof initialState\r\nexport type setIsLoggedInAC = ReturnType<typeof setIsLoggedInAC>\r\ntype ActionsType = setIsLoggedInAC\r\n","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://neko-cafe-back.herokuapp.com/`\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth`)\r\n    },\r\n    login() {\r\n        return instance.post(`auth`)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth`)\r\n    }\r\n}\r\n\r\n// types\r\n","import { AxiosError } from 'axios';\r\nimport {Dispatch} from 'redux'\r\nimport {authAPI} from \"../dal/api\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-IS-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status}) as const\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error}) as const\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'APP/SET-IS-INITIALIZED', isInitialized}) as const\r\n\r\n// thunks\r\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    // authAPI.me().then(res => {\r\n    //     if (res.data.resultCode === 0) {\r\n    //         // dispatch(setIsLoggedInAC(true))\r\n    //         dispatch(setAppStatusAC('succeeded'))\r\n    //     } else {\r\n    //         // handleServerAppError(dispatch, res.data)\r\n    //     }\r\n    // })\r\n    //     .catch((err: AxiosError) => {\r\n    //         // handleServerNetworkError(dispatch, err.message)\r\n    //     }).finally(() => {\r\n    //     dispatch(setIsInitializedAC(true))\r\n    // })\r\n}\r\n\r\n// types\r\nexport type InitialStateType = typeof initialState\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetIsInitializedActionType = ReturnType<typeof setIsInitializedAC>\r\n\r\ntype ActionsType =\r\n    | SetAppStatusActionType\r\n    | SetAppErrorActionType\r\n    | SetIsInitializedActionType","import { instance } from \"../../../../d1-main/dal/base-url\";\r\n\r\n\r\nexport const ForgotAPI = {\r\n    forgot(data: ForgotParamsType) {\r\n        return instance.post<ResponseForgotType | ErrorForgotType>(`auth/forgot`, data)\r\n    },\r\n    setPass(data: SetPassParamsType) {\r\n        return instance.post<ResponseSetPassType | ErrorSetPassType>(`auth/set-new-password`, data)\r\n    }\r\n};\r\n\r\n\r\n// types\r\nexport type ForgotParamsType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type ResponseForgotType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\nexport type ErrorForgotType = {\r\n    email: string\r\n    emailRegExp: {}\r\n    error: string\r\n    in: string\r\n}\r\nexport type SetPassParamsType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type ResponseSetPassType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\nexport type ErrorSetPassType = {\r\n    email: string\r\n    emailRegExp: {}\r\n    error: string\r\n    in: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {ForgotAPI, ForgotParamsType, SetPassParamsType} from \"../../f-3-dal/ForgotAPI\";\r\nimport {setAppStatusAC, SetAppStatusActionType} from \"../../../../../d1-main/bll/appReducer\";\r\n\r\nconst FORGOT_LOADING = 'FORGOT/LOADING';\r\nconst FORGOT_ERROR = 'FORGOT/ERROR';\r\nconst FORGOT_SUCCESS = 'FORGOT/SUCCESS';\r\nconst SET_PASS_SUCCESS = 'SET_PASS/SUCCESS';\r\n\r\nconst forgotInitialState = {\r\n    linkSent: false,\r\n    setNewPass: false,\r\n    email: '',\r\n    error: ''\r\n};\r\n\r\nexport const forgotReducer = (state: InitialStateType = forgotInitialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FORGOT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                linkSent: true,\r\n                email: action.email\r\n            }\r\n        case FORGOT_ERROR:\r\n            return {...state, error: action.error}\r\n        case SET_PASS_SUCCESS:\r\n            return {...state, setNewPass: true}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nexport const forgotSuccess = (email: string) =>\r\n    ({type: FORGOT_SUCCESS, email} as const)\r\nexport const forgotError = (error: string) =>\r\n    ({type: FORGOT_ERROR, error} as const)\r\nexport const setPassSuccess = () =>\r\n    ({type: SET_PASS_SUCCESS} as const)\r\n\r\n// thunks\r\nexport const forgotTC = (email: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    const forgotData: ForgotParamsType = {\r\n        email: email,\r\n        from: \"test-front-admin <ai73a@yandex.by>\",\r\n        message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n                <a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\r\n    }\r\n    ForgotAPI.forgot(forgotData)\r\n        .then(res => {\r\n            dispatch(forgotSuccess(forgotData.email))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log('Error: ', error)\r\n            dispatch(forgotError(error))\r\n            dispatch(setAppStatusAC('failed'))\r\n        })\r\n}\r\n\r\nexport const setPassTC = (data: SetPassParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    ForgotAPI.setPass(data)\r\n        .then(res => {\r\n            dispatch(setPassSuccess())\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log('Error: ', error)\r\n            dispatch(forgotError(error))\r\n            dispatch(setAppStatusAC('failed'))\r\n        })\r\n}\r\n\r\n\r\n// types\r\ntype InitialStateType = typeof forgotInitialState\r\nexport type FogotErrorActionType = ReturnType<typeof forgotError>\r\n\r\ntype ActionsType = ReturnType<typeof forgotSuccess>\r\n    | FogotErrorActionType\r\n    | ReturnType<typeof setPassSuccess>\r\n    | SetAppStatusActionType","import { Router } from 'react-router-dom';\r\nimport {Dispatch} from 'redux'\r\nimport {loginAPI, LoginParamsType, ResponseLoginType } from '../dal/api-login';\r\nimport {registerAPI, RegisterParamsType, ResponseRegisterType} from \"../dal/api-register\";\r\nimport { setIsLoggedInAC } from './authReducer';\r\nimport { push } from 'react-router-redux';\r\nimport {setAppStatusAC, SetAppStatusActionType} from \"./appReducer\";\r\nimport {FogotErrorActionType, forgotError} from \"../../d2-features/f1-auth/a3-forgot/f-2-bll/b-2-redux/forgotReducer\";\r\n\r\n\r\nlet defaultDate: Date = new Date();\r\nconst initialState = {\r\n    userData: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: defaultDate,\r\n        updated: defaultDate,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"\"\r\n    },\r\n    isRegistered: false,\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const loginRegisterReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/LOGIN':\r\n            return {...state, userData: action.loginResponse, isLoggedIn: true}\r\n        case \"AUTH/IS_REGISTERED\": {\r\n            return  {...state, isRegistered: action.isRegistered}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const loginAC = (loginResponse: ResponseLoginType) => ({type: 'AUTH/LOGIN', loginResponse} as const)\r\nexport const isRegisteredAC = (isRegistered: boolean) => ({type: 'AUTH/IS_REGISTERED', isRegistered} as const)\r\nexport const registerAC = () => ({type: 'AUTH/REGISTER'} as const)\r\n\r\n// thunks\r\nexport const loginTC = (loginData: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    loginAPI.login(loginData)\r\n        .then(res => {\r\n            dispatch(loginAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log('Error: ', error)\r\n            dispatch(forgotError(error))\r\n            dispatch(setAppStatusAC('failed'))\r\n        })\r\n}\r\n\r\nexport const registerTC = (registerData: RegisterParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    registerAPI.register(registerData).then(res => {\r\n        dispatch(registerAC())\r\n        dispatch(isRegisteredAC(true))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }).catch((e) => {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', error)\r\n        dispatch(forgotError(error))\r\n        dispatch(setAppStatusAC('failed'))\r\n    })\r\n}\r\n\r\n// types\r\ntype InitialStateType = {\r\n    userData: ResponseLoginType\r\n    isRegistered: boolean\r\n    isLoggedIn: boolean\r\n}\r\ntype RegisterActionType = ReturnType<typeof registerAC>\r\ntype loginActionType = ReturnType<typeof loginAC>\r\ntype IsRegisteredActionType = ReturnType<typeof isRegisteredAC>\r\ntype ActionsType = loginActionType | RegisterActionType | setIsLoggedInAC\r\n    | IsRegisteredActionType | SetAppStatusActionType | FogotErrorActionType\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className ? className : \"\"}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputPassword: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className ? className : \"\"}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"password\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputPassword;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.btn} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.checkbox}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span>{children}</span>\r\n        </label>  // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"../../../d1-main/bll/loginReducer\";\r\nimport {useFormik} from \"formik\";\r\nimport s from '../a3-forgot/f-1-ui/Forgot.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../../d1-main/ui/Routes/Routes\";\r\nimport SuperInputText from \"../../../d1-main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperInputPassword from \"../../../d1-main/ui/common/c1-SuperInputText/SuperInputPassword\";\r\nimport {AppRootStateType} from \"../../../d1-main/bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport SuperButton from \"../../../d1-main/ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../d1-main/ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport {forgotError} from \"../a3-forgot/f-2-bll/b-2-redux/forgotReducer\";\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginRegister.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, string>(state => state.forgot.error)\r\n\r\n    useEffect(() => {\r\n        dispatch(forgotError(''))\r\n    }, [])\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        rememberMe?: boolean\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            }   else if (!/^[A-Z0-9._%+-]{5,15}$/i.test(values.password)) {\r\n                errors.email = 'Invalid password';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            // console.log(values)\r\n            // alert(JSON.stringify(values));\r\n            dispatch(loginTC(values))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    // let onRememberMeChange = () => {\r\n    //    formik.values.rememberMe = !formik.values.rememberMe;\r\n    // }\r\n\r\n    if(isLoggedIn) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.header}>It-incubator</div>\r\n            <div className={s.page}>Sing In</div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <SuperInputText id='email' error={error}\r\n                            {...formik.getFieldProps('email')} />\r\n                    {formik.touched.email && formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">password</label>\r\n                    <SuperInputPassword id='password'\r\n                           {...formik.getFieldProps('password')} />\r\n                    {formik.touched.password && formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                </div>\r\n                <div>\r\n                    {/*<label htmlFor=\"rememberMe\">remember me</label>*/}\r\n                    {/*<input onChange={onRememberMeChange}*/}\r\n                    {/*       type=\"checkbox\" name=\"rememberMe\" />*/}\r\n                    <SuperCheckbox children={'Remember me'}\r\n                                   {...formik.getFieldProps('rememberMe')}/>\r\n                </div>\r\n                <NavLink to={PATH.FORGOT} className={s.textLink}>Forgot password</NavLink>\r\n                <div>\r\n                    <SuperButton type='submit'>Login</SuperButton>\r\n                </div>\r\n            </form>\r\n            <div className={s.text}>Don't have an account?</div>\r\n            <NavLink to={PATH.REGISTER} className={s.link}>Sing Up</NavLink>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { registerTC } from \"../../../d1-main/bll/loginReducer\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../d1-main/bll/store\";\r\nimport s from \"../a3-forgot/f-1-ui/Forgot.module.css\";\r\nimport SuperInputText from \"../../../d1-main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperInputPassword from \"../../../d1-main/ui/common/c1-SuperInputText/SuperInputPassword\";\r\nimport SuperButton from \"../../../d1-main/ui/common/c2-SuperButton/SuperButton\";\r\nimport {forgotError} from \"../a3-forgot/f-2-bll/b-2-redux/forgotReducer\";\r\n\r\nexport const Register = () => {\r\n    const error = useSelector<AppRootStateType, string>(state => state.forgot.error)\r\n    const isReg = useSelector<AppRootStateType, boolean>(state => state.loginRegister.isRegistered)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginRegister.isLoggedIn)\r\n    useEffect(() => {\r\n        dispatch(forgotError(''))\r\n    }, [])\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n    }\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            }   else if (!/^[A-Z0-9._%+-]{5,15}$/i.test(values.password)) {\r\n                errors.email = 'Invalid password';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            console.log(values)\r\n            alert(JSON.stringify(values));\r\n            dispatch(registerTC(values), )\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    if (isReg) {\r\n        // dispatch(isInitializedAC(true))\r\n        return <Redirect to={'/login'} />\r\n    }\r\n    if(isLoggedIn) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.header}>It-incubator</div>\r\n            <div className={s.page}>Sing In</div>\r\n            <form action=\"\" onSubmit={formik.handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <SuperInputText id='email' error={error}\r\n                                    {...formik.getFieldProps('email')}\r\n                    />\r\n                    {   formik.touched.email &&\r\n                    formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">password</label>\r\n                    <SuperInputPassword id='password'\r\n                                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {   formik.touched.password &&\r\n                    formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                </div>\r\n                <SuperButton type='submit'>Register</SuperButton>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../../d1-main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../d1-main/ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../d1-main/ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestPage = () => {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text);\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n    return (\r\n        <div>\r\n            <div>TestPage</div>\r\n            <div>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                />\r\n                <SuperButton onClick={showAlert}>delete</SuperButton>\r\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked}>some text</SuperCheckbox>\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <div>Main</div>\r\n\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './Forgot.module.css';\r\nimport SuperInputText from \"../../../../d1-main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../../d1-main/ui/common/c2-SuperButton/SuperButton\";\r\nimport {PATH} from \"../../../../d1-main/ui/Routes/Routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {forgotError, forgotTC} from \"../f-2-bll/b-2-redux/forgotReducer\";\r\n\r\n\r\ntype ForgotProps = {\r\n    error: string\r\n}\r\n\r\nconst Forgot: React.FC<ForgotProps> = ({error}) => {\r\n\r\n    console.log('render Forgot');\r\n    useEffect(() => {\r\n        dispatch(forgotError(''))\r\n    }, [])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onForgotHandler = () => {\r\n        dispatch(forgotTC(email))\r\n    }\r\n    const [email, setEmail] = useState('')\r\n\r\n    const onEmailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(forgotError(''))\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.header}>It-incubator</div>\r\n            <div className={s.page}>Forgot your password?</div>\r\n            <SuperInputText onChange={onEmailChange} error={error} placeholder={'Email'}/>\r\n            <div className={s.text}>Enter your email address and we will send you further instructions</div>\r\n            <SuperButton onClick={onForgotHandler}>Send Instructions</SuperButton>\r\n            <div className={s.text}>Did you remember your password?</div>\r\n            <NavLink to={PATH.LOGIN} className={s.link}>Try logging in</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Forgot;\r\n","import React from 'react';\r\nimport s from './Forgot.module.css';\r\n\r\n\r\ntype CheckEmailProps = {\r\n    email: string\r\n}\r\n\r\nexport const CheckEmail: React.FC<CheckEmailProps> = ({email}) => {\r\n\r\n    console.log('render CheckEmail');\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.header}>It-incubator</div>\r\n            <div className={s.page}>Check Email</div>\r\n            <div className={s.text}>We've sent an Email with instructions to {email}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport Forgot from './Forgot';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../d1-main/bll/store\";\r\nimport {CheckEmail} from \"./CheckEmail\";\r\n\r\nconst ForgotContainer: React.FC = () => {\r\n    const linkSent = useSelector<AppRootStateType, boolean>(state => state.forgot.linkSent)\r\n    const email = useSelector<AppRootStateType, string>(state => state.forgot.email)\r\n    const error = useSelector<AppRootStateType, string>(state => state.forgot.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginRegister.isLoggedIn)\r\n\r\n    if(isLoggedIn) { // если не залогинен\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    return <>\r\n        {linkSent ? <CheckEmail email={email}/> : <Forgot error={error}/>}\r\n    </>\r\n};\r\n\r\nexport default ForgotContainer;\r\n","import React from 'react';\r\nimport ForgotContainer from './ForgotContainer';\r\n\r\n\r\nconst ForgotPage: React.FC = () => {\r\n    console.log('render ForgotPage');\r\n\r\n\r\n    return (<>\r\n            <ForgotContainer/>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotPage;\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../d1-main/bll/store\";\r\nimport s from \"./Forgot.module.css\";\r\nimport SuperInputText from \"../../../../d1-main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../../d1-main/ui/common/c2-SuperButton/SuperButton\";\r\nimport {forgotError, setPassTC} from \"../f-2-bll/b-2-redux/forgotReducer\";\r\nimport {useParams, withRouter } from 'react-router-dom';\r\n\r\nconst SetPass: React.FC = () => {\r\n    const {token} = useParams<{token: string}>()\r\n    console.log('render SetPass')\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(forgotError(''))\r\n    }, [])\r\n    const error = useSelector<AppRootStateType, string>(state => state.forgot.error)\r\n    const setNewPass = useSelector<AppRootStateType, boolean>(state => state.forgot.setNewPass)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginRegister.isLoggedIn)\r\n\r\n    const [password, setPassword] = useState('')\r\n    const onPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n        if (error) {\r\n            dispatch(forgotError(''))\r\n        }\r\n    }\r\n\r\n    const onSetPassHandler = () => {\r\n        if (password.length < 8) {\r\n            dispatch(forgotError('Password must be more than 7 characters'))\r\n        } else {\r\n            dispatch(setPassTC({password: password, resetPasswordToken: token}))\r\n        }\r\n    }\r\n\r\n    if (setNewPass) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.header}>It-incubator</div>\r\n            <div className={s.page}>Create new password</div>\r\n            <SuperInputText onChange={onPasswordChange} error={error} placeholder={'Password'}/>\r\n            <div className={s.text}>Create new password and we will send you further instructions to email</div>\r\n            <SuperButton onClick={onSetPassHandler}>Create new password</SuperButton>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(SetPass)","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            <div>Profile</div>\r\n\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Error404} from \"../common/c4-Error404/Error404\";\r\nimport {Login} from \"../../../d2-features/f1-auth/a1-login/Login\";\r\nimport {Register} from \"../../../d2-features/f1-auth/a2-register/Register\";\r\nimport {TestPage} from \"../../../d2-features/f0-test/TestPage\";\r\nimport {Main} from \"../Main/Main\";\r\nimport ForgotPage from \"../../../d2-features/f1-auth/a3-forgot/f-1-ui/ForgotPage\";\r\nimport SetPass from \"../../../d2-features/f1-auth/a3-forgot/f-1-ui/SetPass\";\r\nimport {Profile} from \"../Profile/Profile\";\r\n\r\nexport const PATH = {\r\n    MAIN: \"/main\",\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    TEST: \"/test\",\r\n    FORGOT: \"/forgot\",\r\n    SET_PASS: \"/set-new-password/:token\",\r\n    PROFILE: \"/profile\",\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.MAIN}/>}/>\r\n                <Route path={PATH.MAIN} render={() => <Main/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.FORGOT} render={() => <ForgotPage/>}/>\r\n                <Route path={PATH.SET_PASS} render={() => <SetPass/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestPage/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport s from \"./Header.module.css\";\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.MAIN} className={s.link} activeClassName={s.active}>Main</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={s.link} activeClassName={s.active}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTER} className={s.link} activeClassName={s.active}>Register</NavLink>\r\n            <NavLink to={PATH.FORGOT} className={s.link} activeClassName={s.active}>Forgot</NavLink>\r\n            <NavLink to={PATH.SET_PASS} className={s.link} activeClassName={s.active}>SetPass</NavLink>\r\n            {/*{!props.isLoggedIn && <NavLink to={PATH.SET_PASS} className={s.link} activeClassName={s.active}>SetPass</NavLink>}*/}\r\n            {/*{!props.isLoggedIn && <NavLink to={PATH.REGISTER} className={s.link} activeClassName={s.active}>Register</NavLink>}*/}\r\n            <NavLink to={PATH.PROFILE} className={s.link} activeClassName={s.active}>Profile</NavLink>\r\n            <NavLink to={PATH.TEST} className={s.link} activeClassName={s.active}>TestPage</NavLink>\r\n            {/*<div className={s.block}/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype HeaderPropsType = {\r\n    isLoggedIn: boolean\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {useSelector} from \"react-redux\";\r\nimport {Header} from \"./Header/Header\";\r\nimport {Routes} from \"./Routes/Routes\";\r\nimport {AppRootStateType} from '../bll/store';\r\nimport {RequestStatusType} from \"../bll/appReducer\";\r\n\r\nconst App = () => {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    // const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginRegister.isLoggedIn)\r\n    // const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(initializeAppTC())\r\n    // }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header isLoggedIn={isLoggedIn}/>\r\n            <Routes/>\r\n            {status === 'loading' && <div>LOADING...</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {authReducer} from \"./authReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport {forgotReducer} from \"../../d2-features/f1-auth/a3-forgot/f-2-bll/b-2-redux/forgotReducer\";\r\nimport { loginRegisterReducer } from './loginReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    loginRegister: loginRegisterReducer,\r\n    forgot: forgotReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './d1-main/ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./d1-main/bll/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__SknYj\",\"link\":\"Header_link__1cb0f\",\"active\":\"Header_active__b-SPl\",\"block\":\"Header_block__kYiV1\"};"],"sourceRoot":""}